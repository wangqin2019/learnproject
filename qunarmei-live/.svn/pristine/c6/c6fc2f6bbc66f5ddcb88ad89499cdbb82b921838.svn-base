<?php
/**
 * Created by PhpStorm.
 * User: wq
 * Date: 2020/1/9
 * Time: 11:46
 */

namespace app\api\service;
use app\api\model\Live;
use app\api\model\LiveAlgorithm;
use tencent_cloud\TimChat;
use think\Db;
/**
 * 手机端直播服务类
 */
class LiveMobileService extends BaseSer
{
    /**
     * 直播当前人数
     * @param string $chat_id 聊天室id
     */
    public function liveNumbers($chat_id)
    {
        // 1.获取当前人数 x k值系列倍数
        $tent = new TimChat();
        $rest = $tent->getChatCntList([$chat_id]);
        $chat_num = 1;
        if($rest) {
            $chat_num = $rest[0]['chat_num'];
        }
        // 获取k值
        $map['chat_id'] = $chat_id;
        $res = LiveAlgorithm::get($map);
        if($res){
            // 计算x数分钟数
            $dt_cha = (time() - strtotime($res['create_time']))/60;
//            var_dump($dt_cha);
            // y = kx + m + 随机数
            $chat_num = ceil($dt_cha * $res['k']) + $res['m'] + 2;
            // 当线性数大于设置的最大值时
            if($chat_num >= $res['nums']){
                $chat_num = $res['nums'] + rand(1,9);
//                $chat_num = $res['nums'] + 2;
            }
//            var_dump($chat_num);
        }
        $this->code = 1;
        $this->msg = '获取成功';
        $this->data = ['num' => $chat_num];
        return $this->returnArr();
    }
    /**
     * 主播关闭直播间后的直播信息
     * @param string $chat_id 聊天室id
     * @param int $minute 多少分钟
     * @param int $nums 达到多少人
     */
    public function liveNumbersAdjustment($chat_id,$minute,$nums)
    {
        // 1.记录数据表到算法表
        $map['chat_id'] = $chat_id;
        $res = LiveAlgorithm::get($map);
        $data['minute'] = $minute;
        $data['nums'] = $nums;
        $chat_num = 1;
        // 2.查询当前直播间人数
        $tent = new TimChat();
        $rest = $tent->getChatCntList([$chat_id]);
        if($rest) {
            $chat_num = $rest[0]['chat_num'];
        }
        $data['m'] = $chat_num;
        if($res){
            LiveAlgorithm::update($data,$map);
        }else{
            $data['chat_id'] = $chat_id;
            $data['remark'] = '线性算法: y=kx+m';
            LiveAlgorithm::create($data);
        }
        // 2.查询当前直播间人数

        // 通过算法计算出比例值
        $algser = new AlgorithmSer();
        $a = [0 , $chat_num];
        $b = [$minute , $nums];// 按分钟计算
        $k = $algser->linear($a , $b);
        if($k){
            $data1['k'] = $k;
            LiveAlgorithm::update($data1,$map);
            $this->code = 1;
            $this->msg = '计算成功';
            $this->data = ['k'=>$k,'minute'=>$minute,'nums'=>$nums,'chat_id'=>$chat_id];
        }

        return $this->returnArr();
    }
    /**
     * 主播关闭直播间后的直播信息
     * @param int $live_id 直播间id
     */
    public function liveEnd($live_id)
    {

        $this->code = 1;
        // 获取主播和直播间信息
        $map['id'] = $live_id;
//        $map['statu'] = 2;
        $res = Live::get($map);
        if($res){
            $arr['statu'] = $res['statu'];
            $arr['img'] = $res['user_img'];
            $arr['name'] = $res['user_name'];
            $arr['address'] = $res['address'];
            $arr['end_info1'] = '今日直播已结束';
            $arr['end_info2'] = '感谢您的支持,期待与您再次相遇!';
            // 如果时长为空,自己计算时长
            if(empty($res['db_length'])){
                // 计算时长
                $db_length = strtotime($res['update_time']) - $res['insert_time'];
                $res['db_length'] = secToTime($db_length);
            }
            $arr['db_length'] = '直播时长: '.$res['db_length'];
            $this->msg = '获取成功';
            $this->data = $arr;
        }else{
            $this->data = (object)[];
        }
        return $this->returnArr();
    }
    /**
     * 主播主动关闭记录时长
     * @param int $live_id 直播间id
     * @param string $length 时长
     */
    public function closeLive($live_id,$length)
    {
        $this->code = 0;
        $this->msg = '记录失败';
        // 通过直播间id更新直播时长
        $res = Live::get($live_id);
        if($res){
            // 更新主播直播时长
            $map['id'] = $live_id;
            $data['db_length'] = $length;
            $data['statu'] = 2;

            Live::update($data,$map);
            // 清除直播列表redis缓存
            $liveser = new \app\api\controller\Live();
            $key = 'livelist19';

            $liveser->clearRedis($key);
            // 下发信息修改
            $this->code = 1;
            $this->msg = '记录时长成功';
            $this->data = [];
        }
        return $this->returnArr();
    }
    /**
     * 是否有可续接的流直播
     * @param string $mobile 主播号码
     */
    public function whetherContinue($mobile)
    {
        // 获取主播当天最后1次直播流
        $map['user_id'] = $mobile;
        $map['insert_time'] = ['>=',strtotime(date("Y-m-d"),time())];
        $res = Db::table('think_live')->where($map)->order('id desc')->limit(1)->find();
        $this->code = 1;
        $this->msg = '暂无数据';
        $arr['flag'] = 0;
        $arr['msg'] = '您当前没有可以续接的直播';
        if ($res) {
            $this->code = 1;
            $this->msg = '获取成功';
            $arr['flag'] = 1;
            $arr['msg'] = '有可以续接的直播';
        }
        $this->data = $arr;
        return $this->returnArr();
    }
    /**
     * 断流续播
     * @param int $mobile 用户号码
     * @return
     */
    public function continueLive($mobile)
    {
        // 获取主播当天最后1次直播流
        $map['user_id'] = $mobile;
        $map['insert_time'] = ['>=',strtotime(date("Y-m-d"),time())];
        $res = Db::table('think_live')->where($map)->order('id desc')->limit(1)->find();
        $this->code = 1;
        $this->msg = '您当前没有可以续接的直播';
        if ($res) {
            $arr['chat_id'] = $res['chat_id'];
            $arr['room_id'] = 0;
            $arr['live_id'] = $res['id'];
            $arr['classify_id'] = $res['classify_id'];
            $arr['push_url'] = $res['push_url'];
            $arr['see_url'] = $res['see_url'];
            $arr['title'] = $res['title'];
            $arr['content'] = $res['content'];
            $arr['address'] = $res['address'];
            $arr['head_title'] = $res['address'];
            $arr['room_name'] = '';
            $arr['room_token'] = '';
            // 查询对应的连麦房间信息
            $mapr['live_name'] = $res['live_stream_name'];
            $resroom = Db::table('think_room')->where($mapr)->limit(1)->find();
            if ($resroom) {
                $arr['room_id'] = $resroom['id'];
                $arr['room_name'] = $resroom['room_name'];
                $arr['room_token'] = $resroom['room_token'];
            }
            $this->data = $arr;
            $this->msg = '有可以续接的直播';
        }else{
            $this->data = (object)[];
        }
        return $this->returnArr();
    }
}