<?php
/**
 * Created by PhpStorm.
 * User: wq
 * Date: 2019/10/14
 * Time: 15:36
 */

namespace app\neibu\service;
use app\api\service\BaseSer;
use think\Db;
/**
 * 定时器处理类
 */
set_time_limit(0);
class JobService extends BaseSer
{
    // 获取物流信息接口地址
    protected $expressUrl = 'http://erpapi2.chengmei.com:7779/web/axs.php';
    
    /**
     * 每日执行1次的定时任务
     */
    public function daySum()
    {
        // 1.没进订单详情的,有物流单号的,我每次拉取物流信息 , 已签收的保存到物流信息表 
        $res = $this->saveLogtic();
        // 2.已签收 and status=2的订单,签收时间超过7天,我把status改为3
        $res1 = $this->autoOrder();
        $this->code = 0;
        if ($res) {
            $this->code = 1;
            $this->msg = $res['msg'].';';
            $this->data['save_logtic'] = $res['data'];
        }
        if ($res1) {
            $this->code = 1;
            $this->msg .= $res1['msg'];
            $this->data['auto_order'] = $res1['data'];
        }
        return $this->returnArr();
    }
    // 保存已签收订单进入物流信息表
    protected function saveLogtic()
    {
        $ids = [];
        // 查询未签收订单是否签收
        // $map['o.id'] = 299961;
        $map['o.status'] = ['in',[1,2]];
        $map['a.express_number'] = ['neq',''];
        $res = Db::table('ims_bj_shopn_order o')->join(['ims_bj_shopn_order_address'=>'a'],['o.id=a.order_id'],'LEFT')->field(' o.ordersn,a.express_code,a.express_number,a.id,a.express_code')->where($map)->order('o.payTime asc')->select();
        if ($res) {
            $address_ids = [];
            foreach ($res as $k => $v) {
                $address_ids[] = $v['id'];
            }
            // 查询已签收订单地址id
            $addr_sign_id = [];
            if ($address_ids) {
                $mapaddr['address_id'] = ['in',$address_ids];
                $mapaddr['state'] = 3;
                $resaddr = Db::table('ims_bj_shopn_order_express')->where($mapaddr)->select();
                if ($resaddr) {
                    foreach ($resaddr as $ka => $va) {
                        $addr_sign_id[] = $va['address_id'];
                    }
                }
            }
            // 删除已签收的订单
            if ($addr_sign_id) {
                foreach ($res as $k => $v) {
                    if (in_array($v['id'], $addr_sign_id)) {
                        unset($res[$k]);
                    }
                }
            }
            foreach ($res as $k => $v) {
                // 查询物流快递信息,已签收-保存-该状态
                $ship_code = $v['express_code'];
                $logtic = $v['express_number'];
                if (strstr($v['express_number'], ',')) {
                    $express_number1 = explode(',', $v['express_number']);
                    $logtic = $express_number1[0];
                }
                $reskd = kdn_express($ship_code,$logtic);
                if ($reskd['State'] == 3) {
                     $traces = $reskd['Traces'];
                     $arrp = array_pop($traces);
                     $accept_time = $arrp['AcceptTime'];
                     $datae['address_id'] = $v['id'];
                     $datae['e_business_id'] = config('kdn.eBusinessID');
                     $datae['order_code'] = $v['ordersn'];
                     $datae['shipper_code'] = $v['express_code'];
                     $datae['logistic_code'] = $v['express_number'];
                     $datae['state'] = 3;
                     $datae['traces'] = json_encode($reskd['Traces'],JSON_UNESCAPED_UNICODE);
                     $datae['sign_for_time'] = $accept_time;
                     $datae['create_time'] = date('Y-m-d H:i:s');
                     $id = Db::table('ims_bj_shopn_order_express')->insertGetId($datae);
                     $ids[] = $id;
                 }
            }
        }
        $this->code = 0;
        $this->msg = '暂无签收订单需要插入物流表';
        if ($ids) {
            $this->code = 1;
            $this->msg = '已签收订单插入物流表成功';
            $this->data = $ids;
        }
        return $this->returnArr();

    }
    // 物流信息表订单签收时间超过7天自动改为已完成status=3
    protected function autoOrder()
    {
        // 查询已签收订单
        $map['a.express_number'] = ['neq',''];
        $map['e.state'] = 3;
        $map['e.type'] = 0;
        $map['e.sign_for_time'] = ['<', date('Y-m-d', strtotime('-7 days'))];
        $res = Db::table('ims_bj_shopn_order_express e')->join(['ims_bj_shopn_order_address'=>'a'],['a.id=e.address_id'],'LEFT')->field('a.order_id')->where($map)->group('a.order_id')->select();
        $ids = [];
        $res1 = [];
        if ($res) {
            foreach ($res as $k => $v) {
                $ids[] = $v['order_id'];
            }
            // 更新状态
            $mapo['id'] = ['in',$ids];
            $mapo['status'] = ['in',[1,2]];
            $datao['status'] = 3;
            $res1 = Db::table('ims_bj_shopn_order')->where($mapo)->update($datao);
        }
        $this->code = 0;
        $this->msg = '暂无已签收订单超过7天未改订单状态';
        if ($ids && $res1) {
            $this->code = 1;
            $this->msg = '已签收订单超过7天自动签收';
            $this->data = $ids;
        }
        return $this->returnArr();
    }

    /**
     * 支付15分分钟没有进行相关操作时,会发送该条提示短信
     * @return
     */
     public function tipBuyter()
     {
        set_time_limit(0);
        $map['is_asx'] = 1;
        $map['payTime'] = ['<',time()-900];
        $res = Db::table('ims_bj_shopn_order o')->join(['ims_bj_shopn_member'=>'m'],['m.id=o.uid'],'LEFT')->field('o.ordersn,m.mobile')->where($map)->order('payTime asc')->limit(100)->select();
        $this->code = 0;
        $this->msg = '暂无超时未选择订单需要提醒';
        if ($res) {
            $arr2 = [];
            // 发送提示短信
            $id_template = 117;
            foreach ($res as $k => $v) {
                $mobile = $v['mobile'];
                $arr['order_sn'] = $v['ordersn'];
                $str = json_encode($arr);
                send_sms($mobile,$id_template,$str);
                $arr1['order_sn'] = $v['ordersn'];
                $arr1['mobile'] = $v['mobile'];
                $arr2[] = $arr1;
            }
            $this->code = 1;
            $this->msg = '未选择订单超时提醒已发送成功';
            $this->data = $arr2;
        }
        return $this->returnArr();
     }
     /**
     * 支付半小时后,为选择是否安心送的 is_axs=1的改为is_axs=2
     * @return
     */
    public function updAxs()
    {
        // 查询已支付但未选择是否安心送超过半小时的订单
        $map['is_asx'] = 1;
        $map['payTime'] = ['<',time()-1800];
        $this->code = 0;
        $this->msg = '暂无未选择安心送超时订单';
        $res = Db::table('ims_bj_shopn_order')->where($map)->order('payTime asc')->select();
        if ($res) {
            $orderid = [];
            foreach ($res as $k => $v) {
                $orderid[] = $v['id'];
            }
            $mapu['id'] = ['in',$orderid];
            $mapu['is_asx'] = 1;
            $datau['is_asx'] = 0;
            $resu = Db::table('ims_bj_shopn_order')->where($mapu)->update($datau);
            if ($resu) {
                $this->code = 1;
                $this->msg = '未选择安心送订单已超时改为到店取货';
                $this->data = implode(',', $orderid);
            }
        }
        return $this->returnArr();
    }
    /**
     * 获取物流信息
     */
    public function getExpress()
    {
        // 查询没有更新物流号的订单
        $map['express_number'] = '';
        $res = Db::table('ims_bj_shopn_order_address')->where($map)->order('id asc')->limit(100)->select();
        if ($res) {
            $this->code = 1;
            $this->msg = '订单物流信息获取成功';

            $orderid = [];
            foreach ($res as $k => $v) {
                $orderid[] = 'APP'.$v['order_id'];
            }
            // 获取物流信息接口
            // http://erpapi2.chengmei.com:7779/web/axs.php?orderno=QNMA202003011517045553319
            $orderids = implode(',', $orderid);
            $url = $this->expressUrl.'?orderno='.$orderids;
            $rest = curl_get($url);
            // $rest = '{"code":1,"data":[{"order_sn":"APP299715","express_name":"中通快递","express_code":"ZTO","express_number":"75324374974726"}],"msg":"物流信息获取成功"}';
            if ($rest) {
                $rest1 = json_decode($rest,true);
                if ($rest1['code']==1) {
                    // 启动事务
                    Db::startTrans();
                    try{
                        $orders = [];
                        // 解析返回数据
                        foreach ($rest1['data'] as $k => $v) {
                            $arr1['order_sn'] = $v['order_sn'];
                            $arr1['express_name'] = $v['express_name'];
                            $arr1['express_code'] = $v['express_code'];
                            $arr1['express_number'] = $v['express_number'];
                            // 更新物流信息
                            $mapo['order_id'] = substr($v['order_sn'],3);
                            $datao['express_code'] = $v['express_code'];
                            $datao['express_name'] = $v['express_name'];
                            $datao['express_number'] = $v['express_number'];
                            $datao['update_time'] = date('Y-m-d H:i:s');
                            Db::table('ims_bj_shopn_order_address')->where($mapo)->update($datao);
                            $orders[] = $mapo['order_id'];
                            // 更新订单状态为已发货
                            // $datao1['status'] = 2;
                            // $mapo1['id'] = $mapo['order_id'];
                            // $mapo1['status'] = 1;
                            // $flag = Db::table('ims_bj_shopn_order')->where($mapo1)->update($datao1);
                            // if ($flag) {
                            //     $orders[] = $mapo['order_id'];
                            // }
                            // 发送短信通知用户
                            $mapo2['o.id'] = $mapo['order_id'];
                            $reso = Db::table('ims_bj_shopn_order o')->join(['ims_bj_shopn_member'=>'m'],['m.id=o.uid'],'LEFT')->field('o.id,o.ordersn,m.mobile')->where($mapo2)->order('payTime asc')->limit(1)->find();
                            if ($reso) {
                                $id_template = 119;
                                $arro['order_sn'] = $reso['ordersn'];
                                $arro['express_name'] = $datao['express_name'];
                                $arro['express_number'] = $datao['express_number'];
                                $str = json_encode($arro,JSON_UNESCAPED_UNICODE);
                                send_sms($reso['mobile'],$id_template,$str);

                                // 查询用户角色
                                $mapr['mobile'] = $reso['mobile'];
                                $resrole = Db::table('ims_bj_shopn_member')->where($mapr)->limit(1)->find();
                                if ($resrole) {
                                    // 如果是顾客
                                    if (strlen($resrole['code'])<1 && $resrole['isadmin']==0){
                                        // 发短信通知上级美容师
                                        $mapp['id'] = $resrole['staffid'];
                                        $resp = Db::table('ims_bj_shopn_member')->where($mapp)->limit(1)->find();
                                        $arrp = $arro;
                                        $id_template = 122;
                                        $arrp['role'] = '美容师';
                                        $arrp['name'] = '';
                                        if ($resp) {
                                            $arrp['name'] = $resp['realname'];
                                            $str = json_encode($arrp,JSON_UNESCAPED_UNICODE);
                                            send_sms($resp['mobile'],$id_template,$str);
                                        }
                                        // 发短信通知该门店店老板
                                        $mapboss['storeid'] = $resrole['storeid'];
                                        $mapboss['isadmin'] = 1;
                                        $resboss = Db::table('ims_bj_shopn_member')->where($mapboss)->limit(1)->find();
                                        if ($resboss) {
                                            $arrp['name'] = $resboss['realname'];
                                            $str = json_encode($arrp,JSON_UNESCAPED_UNICODE);
                                            send_sms($resboss['mobile'],$id_template,$str);
                                        }
                                    }
                                }
                            }
                        }
                        // 提交事务
                        Db::commit();
                        if ($orders) {
                            $orders = implode(',', $orders);
                            $this->msg = '订单物流信息更新成功';
                        }else{
                            $this->msg = '暂无订单物流信息更新';
                        }
                        $this->data = $orders; 
                    } catch (\Exception $e) {
                        // 回滚事务
                        Db::rollback();
                        $this->msg = $e->getMessage();
                    }
                }else{
                    $this->msg = $rest1['msg'];
                }
            }
        }else{
            $this->code = 0;
            $this->msg = '暂无订单物流信息更新';
        }
        // ims_bj_shopn_order_address
        return $this->returnArr();
    }
}